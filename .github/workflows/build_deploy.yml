name: tr-internship-backend

on:
  push:
    branches: [ develop ]

env:
  NAME: minjin123
  REPO: project-tr-api

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-read-only: false
        gradle-home-cache-cleanup: false  # ✅ 캐시 정리 비활성화하여 Gradle 오류 방지

    - name: Grant execute permission to Gradle wrapper
      run: chmod +x ./gradlew

    - name: Clear Gradle Cache (Optional, if needed)
      run: |
        rm -rf ~/.gradle/caches
        rm -rf ~/.gradle/wrapper
      continue-on-error: true  # ✅ 캐시가 없을 경우에도 오류 발생 방지

    - name: Build with Gradle
      env:
        JASYPT_ENCRYPTOR_PASSWORD: ${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
        DB_URL: ENC(hswedMZ4hDe4DKTFoGF0a0uXXoxmZeIlqTkjoh/wN4ypV/vhgCW6cRjKMebiT7r6)
        DB_USERNAME: myuser
        DB_PASSWORD: ENC(fx879Zcsxn8PaF27WkSlew==)
      run: ./gradlew build --no-daemon --refresh-dependencies  # ✅ 강제 종속성 업데이트

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.NAME }}/${{ env.REPO }}:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-development ]

    steps:
    - name: Run deployment script
      run: |
        sudo sh /home/ubuntu/run.sh
